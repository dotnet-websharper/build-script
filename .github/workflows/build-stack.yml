name: Build WebSharper 5 Core Stack

on:
  workflow_dispatch

jobs:
  build:

    runs-on: windows-latest
      
    env: 
      WSPackageFolder: ../localnuget
      WSVersionsFile: ../versions.txt
      BUILD_NUMBER: ${{ github.run_number }}
    
    steps:
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.301
        
    - name: Add GitHub registry NuGet source
      run: 
        dotnet nuget 
          add source https://nuget.pkg.github.com/dotnet-websharper/index.json 
          --name github 
          --username intellifactory-gh 
          --password ${{ secrets.PAT_PACKAGE }} 
          --store-password-in-clear-text

    - name: Install Paket as global tool
      run: dotnet tool install paket --global

    - name: Add credentials for Paket
      run:
        paket config
          add-credentials https://nuget.pkg.github.com/dotnet-websharper/index.json
          --username intellifactory-gh 
          --password ${{ secrets.PAT_PACKAGE }}
          
    - name: Configure IntelliFactory CI git user
      run: |
        git config --global user.email "ci@intellifactory.com"
        git config --global user.name "IntelliFactory CI"

    - name: Check out WS Core
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/core
        ref: master
        path: core
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Build WS Core
      run: ./build CI-Release
      working-directory: ./core

    - name: Check out WS.UI
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/ui
        ref: master
        path: ui
        token: ${{ secrets.PAT_PACKAGE }}
        
    - name: Build WS.UI
      run: ./build CI-Release
      working-directory: ./ui

    - name: Check out WS.AspNetCore.WebSocket
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/aspnetcore
        ref: master
        path: aspnetcore
        token: ${{ secrets.PAT_PACKAGE }}
        
    - name: Build WS.AspNetCore.WebSocket
      run: ./build CI-Release
      working-directory: ./aspnetcore

    - name: Check out WS.Templates
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/templates
        ref: master
        path: templates
        token: ${{ secrets.PAT_PACKAGE }}
        
    - name: Build WS.Templates
      run: ./build CI-Release
      working-directory: ./templates

    - name: Check out WS.JQuery
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/jquery
        ref: master
        path: jquery
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Build WS.JQuery
      run: ./build CI-Release
      working-directory: ./jquery

    - name: Check out WS.Forms
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/forms
        ref: master
        path: forms
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Build WS.Forms
      run: ./build CI-Release
      working-directory: ./forms
      
    - name: Check out WS.MVU
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/mvu
        ref: master
        path: mvu
        token: ${{ secrets.PAT_PACKAGE }}
    
    - name: Build WS.MVU
      run: ./build CI-Release
      working-directory: ./mvu

    - name: Check out WS.Leaflet
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/leaflet
        ref: master
        path: leaflet
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Build WS.Leaflet
      run: ./build CI-Release
      working-directory: ./leaflet

    - name: Check out WS.D3
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/d3
        ref: master
        path: d3
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Build WS.D3
      run: ./build CI-Release
      working-directory: ./d3

    - name: Check out WS.React
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/react
        ref: master
        path: react
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Build WS.React
      run: ./build CI-Release
      working-directory: ./react

    - name: Check out WS.SignalR
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/signalr
        ref: master
        path: signalr
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Build WS.SignalR
      run: ./build CI-Release
      working-directory: ./signalr

    - name: List packages within ./localnuget
      run: ls ./localnuget

    - name: Publish NuGet packages to GitHub registry
      run: dotnet nuget push *.nupkg --source github --api-key ${{ secrets.PAT_PACKAGE }}
      working-directory: ./localnuget
      
    - name: Push packages as artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Packages
        path: ./localnuget

    - name: Clean ./localnuget
      uses: JesseTG/rm@v1.0.0
      with:
        path: ./localnuget

    - name: Commit version on WS Core
      run: ./build CI-Commit
      working-directory: ./core

    - name: Commit version on WS.UI
      run: ./build CI-Commit
      working-directory: ./ui
      
    - name: Commit version on WS.AspNetCore.WebSocket
      run: ./build CI-Commit
      working-directory: ./aspnetcore
      
    - name: Commit version on WS.Templates
      run: ./build CI-Commit
      working-directory: ./templates
    
    - name: Commit version on WS.JQuery
      run: ./build CI-Commit
      working-directory: ./jquery

    - name: Commit version on WS.Forms
      run: ./build CI-Commit
      working-directory: ./forms

    - name: Commit version on WS.MVU
      run: ./build CI-Commit
      working-directory: ./mvu

    - name: Commit version on WS.Leaflet
      run: ./build CI-Commit
      working-directory: ./leaflet

    - name: Commit version on WS.D3
      run: ./build CI-Commit
      working-directory: ./d3

    - name: Commit version on WS.React
      run: ./build CI-Commit
      working-directory: ./react

    - name: Commit version on WS.SignalR
      run: ./build CI-Commit
      working-directory: ./signalr
