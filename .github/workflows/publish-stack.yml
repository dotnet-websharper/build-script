name: Publish WebSharper 5 Core Stack

on:
  workflow_dispatch

jobs:
  publish:

    runs-on: windows-latest
      
    steps:

    - name: Download Packages Artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: build-stack.yml
        name: Packages
        path: Packages

    - name: Push to NuGet
      run:
        dotnet nuget push "Packages/*.nupkg"
          --api-key ${{ secrets.NUGET_API_KEY }}
          --source https://api.nuget.org/v3/index.json
          --skip-duplicate

    - name: Check out WS Core
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/core
        ref: websharper50
        path: core
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Tag WS Core
      run: ./build CI-Tag
      working-directory: ./core

    - name: Check out WS.UI
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/ui
        ref: websharper50
        path: ui
        token: ${{ secrets.PAT_PACKAGE }}
        
    - name: Tag WS.UI
      run: ./build CI-Tag
      working-directory: ./ui

    - name: Check out WS.AspNetCore.WebSocket
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/aspnetcore
        ref: websharper50
        path: aspnetcore
        token: ${{ secrets.PAT_PACKAGE }}
        
    - name: Tag WS.AspNetCore.WebSocket
      run: ./build CI-Tag
      working-directory: ./aspnetcore

    - name: Check out WS.Templates
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/templates
        ref: websharper50
        path: templates
        token: ${{ secrets.PAT_PACKAGE }}
        
    - name: Tag WS.Templates
      run: ./build CI-Tag
      working-directory: ./templates

    - name: Check out WS.JQuery
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/jquery
        ref: master
        path: jquery
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Tag WS.JQuery
      run: ./build CI-Tag
      working-directory: ./jquery

    - name: Check out WS.Forms
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/forms
        ref: master
        path: forms
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Tag WS.Forms
      run: ./build CI-Tag
      working-directory: ./forms

    - name: Check out WS.MVU
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/mvu
        ref: master
        path: mvu
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Tag WS.MVU
      run: ./build CI-Tag
      working-directory: ./mvu

    - name: Check out WS.Leaflet
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/leaflet
        ref: master
        path: leaflet
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Tag WS.Leaflet
      run: ./build CI-Tag
      working-directory: ./leaflet

    - name: Check out WS.React
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/react
        ref: master
        path: react
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Tag WS.React
      run: ./build CI-Tag
      working-directory: ./react

    - name: Check out WS.D3
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/d3
        ref: master
        path: d3
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Tag WS.D3
      run: ./build CI-Tag
      working-directory: ./d3

    - name: Check out WS.SignalR
      uses: actions/checkout@v2
      with:
        repository: dotnet-websharper/signalr
        ref: master
        path: signalr
        token: ${{ secrets.PAT_PACKAGE }}

    - name: Tag WS.SignalR
      run: ./build CI-Tag
      working-directory: ./signalr

    # TODO: push vsix

    # TODO: push to CDN